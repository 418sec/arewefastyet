---
- hosts: sysbench
  vars:
    table_size: 10000000
    threads: 150
    test_time: 300
  tasks:
    - name: Prepare sysbench
      when: provision is defined
      block:
        - name: Prepare sysbench
          shell: |
            sysbench --luajit-cmd=off --threads=50 --time=30 --mysql-db=main --mysql-host=127.0.0.1 --mysql-port=3306 --db-ps-mode=disable --db-driver=mysql --report-interval=10 --auto-inc=off --tables=50 --table_size={{ table_size }} --range_selects=0 --rand-type=uniform oltp_read_write prepare
          async: 86400
          poll: 0
          register: sysbench_prepare
        - async_status:
            jid: '{{ sysbench_prepare.ansible_job_id }}'
          register: job_result
          until: job_result.finished
          retries: 86400

    - name: Warm up sysbench
      shell: |
        sysbench --luajit-cmd=off --threads=10 --time=30 --mysql-db=main --mysql-host=127.0.0.1 --mysql-port=3306 --db-ps-mode=disable --db-driver=mysql --report-interval=10 --auto-inc=off --tables=50 --table_size={{ table_size }} --range_selects=0 --rand-type=uniform oltp_read_write run

    # Do the runs in parallel
    - name: Run Sysbench
      block:
        - shell: |
            sysbench --luajit-cmd=off --threads={{ threads }} --time={{ test_time }} --mysql-db=main --mysql-host=127.0.0.1 --mysql-port=3306 --db-ps-mode=disable --db-driver=mysql --auto-inc=off --tables=50 --table_size={{ table_size }} --range_selects=0 --rand-type=uniform --verbosity=0 --report_json=true oltp_read_write run
          async: '{{ test_time*2 }}'
          poll: 0
          register: sysbench_run

        - name: Wait for sysbench to finish
          async_status:
            jid: "{{ sysbench_run.ansible_job_id }}"
          register: job_result
          until: job_result.finished
          retries: '{{ test_time*2 }}'
        - debug:
            msg: '{{ job_result }}'
